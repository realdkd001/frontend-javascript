!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){var n=[{firstName:"John",lastName:"Doe",age:20,location:"New York"},{firstName:"Jane",lastName:"Smith",age:22,location:"Los Angeles"}],r=document.createElement("table"),o=document.createElement("tr"),a=document.createElement("th");a.textContent="Name";var l=document.createElement("th");l.textContent="Location";var d=document.createElement("th");d.textContent="Age",o.appendChild(a),o.appendChild(l),o.appendChild(d),r.appendChild(o),n.forEach((function(e){var t=document.createElement("tr"),n=document.createElement("td");n.textContent=e.firstName+" "+e.lastName;var o=document.createElement("td");o.textContent=e.location;var a=document.createElement("td");a.textContent=e.age.toString(),t.appendChild(n),t.appendChild(o),t.appendChild(a),r.appendChild(t)})),document.body.appendChild(r)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,